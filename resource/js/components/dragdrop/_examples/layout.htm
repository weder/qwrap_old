<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>DragDrop demo</title>
<meta http-equiv="Content-Type" content="text/html; charset=GB2312" />
<script type="text/javascript" src="../../../apps/core_dom_all.js"></script>
<script type="text/javascript" src="../dragdrop.js"></script>
<script type="text/javascript" src="../dragdrop.layout.js"></script>
<script type="text/javascript" src="../../../components/animation/anim.js"></script>
</head>
<body>
<style type="text/css">
body,ul,ol,dl,dd,h1,h2,h3,h4,h5,h6,p,form,fieldset,legend,input,textarea,select,button,th,td {margin:0;padding:0;}
h1,h2,h3,h4,h5,h6 {font-size:100%;font-weight:normal;}


body { text-align:center; }

#container {
	width:900px;
	margin:auto;
	margin-top:50px;
}

textarea { display:none; }
#container-left, #container-center, #container-right { float:left; margin-left:20px; border:1px dashed #CCC; height:500px; }
#container-left { width: 150px; }
#container-center { width: 400px; }
#container-right { width:260px; }

#container h3 { font-size:12px; background-color:#CCC; height:30px; line-height:30px; }
#container p { line-height:20px; }

.layout { border:1px solid #000; margin-top:20px; }

.layout-proxy { position:absolute; border:dashed 1px #000; background-color:#000; filter:alpha(opacity=50);opacity:0.5; display:none; }
.layout-proxy.proxy-dragging { display:block; }

.source-dragging { filter:alpha(opacity=50); opacity:0.5; zoom:1; }
.disabled { zoom:1; background-color:#eee; filter:alpha(opacity=10); opacity:0.1; zoom:1; }

tr { background-color:#CCCCCC; }
tr.source-dragging { background-color:#F6F9A4; }

ul { list-style:none; background-color:#F4F4F4; height:50px; width:260px; margin:auto; padding:0; }
li { float:left; height:50px; width:50px; line-height:50px; }

</style>
<textarea style="width:900px;height:100px;"></textarea>


<table border="1" width="300">
	<tr>
		<td>1</td>
		<td>2</td>
	</tr>
	<tr>
		<td>3</td>
		<td>4</td>
	</tr>
	<tr>
		<td>5</td>
		<td>6</td>
	</tr>
	<tr>
		<td>7</td>
		<td>8</td>
	</tr>
	<tr class="disabled">
		<td>9</td>
		<td>10</td>
	</tr>
</table>
<hr>
<table border="1" width="300">
	<tr>
		<td>1</td>
		<td>2</td>
	</tr>
	<tr>
		<td>3</td>
		<td>4</td>
	</tr>
	<tr>
		<td>5</td>
		<td>6</td>
	</tr>
	<tr>
		<td>7</td>
		<td>8</td>
	</tr>
	<tr class="disabled">
		<td>9</td>
		<td>10</td>
	</tr>
</table>
<div id="container">
	<div id="container-left">
		<div class="layout disabled" id="l1">
			<h3>1</h3>
			<p>1</p>
		</div>
		<div class="layout" id="l2">
			<h3>2</h3>
			<p>2</p>
		</div>
		<div class="layout" id="l3">
			<h3>3</h3>
			<p>3</p>
		</div>
	</div>
	<div id="container-center">
		<div class="layout" id="l4">
			<h3>4</h3>
			<p>4</p>
		</div>
		<div class="layout" id="l5">
			<h3>5</h3>
			<p>5</p>
		</div>
		<div class="layout" id="l6">
			<h3>6</h3>
			<p>好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字好多字</p>
		</div>
	</div>
	<div id="container-right">
		<div class="layout" id="l7">
			<h3>7</h3>
			<p>7</p>
		</div>
		<div class="layout" id="l8">
			<h3>8</h3>
			<p>8</p>
		</div>
		<div class="layout" id="l9">
			<h3>9</h3>
			<p>9</p>
		</div>
	</div>
</div>
<hr />
<ul id="float">
	<li style="background-color:#F00">1</li>
	<li style="background-color:#0F0">2</li>
	<li style="background-color:#00F">3</li>
	<li style="background-color:#FF0">4</li>
	<li style="background-color:#0FF">5</li>
</ul>

<div class="layout-proxy"></div>
<div class="layout-proxy"></div>
<div class="layout-proxy"></div>

<div style="height:200px;"></div>
<script type="text/javascript">//<![CDATA[
void function () {
	var elements = QW.Dom.query('#container .layout');

	var proxy = Dom.query('.layout-proxy')[0];
	//siblings 改成 siblings

	var layout = new QW.LayoutDragDrop({ siblings : elements, containers : QW.Dom.query('#container-left, #container-center, #container-right') });

	

	for (var i = 0 ; i < elements.length ; ++ i) {
		layout.add({ source : elements[i], proxy : proxy, handle : elements[i].getElementsByTagName('h3')[0] });
	}

	layout._dragDrop.entities[0].locked = true;

	layout.on('dragstart', function(e) {
		if(layout._anim && layout._anim.isPlay()) {
			layout._anim.suspend();
		}
		Dom.show(e.target.proxy, 'block');
	});

	layout.on('drag', function (e) {
		var docRect = QW.Dom.getDocRect();
							
		if (e.position.mouseX > docRect.scrollX + docRect.width) document.documentElement.scrollLeft = e.position.mouseX - docRect.width;
		else if (e.position.mouseX < docRect.scrollX) document.documentElement.scrollLeft = e.position.mouseX;

		if (e.position.mouseY > docRect.scrollY + docRect.height) document.documentElement.scrollTop = e.position.mouseY - docRect.height;
		else if (e.position.mouseY < docRect.scrollY) document.documentElement.scrollTop = e.position.mouseY;
	});

	layout.on('dragend', function(e) {
		var Anim = QW.Anim,
			proxy = e.target.proxy,
			source   = e.target.source,
			rect = Dom.getRect(source);

		var anim = new Anim(proxy, {
			"opacity": { from : 0.5, to : 0 , end: 0.5},
			"top"	 : { to : rect.top },
			"left"	 : { to : rect.left },
			"width"	 : { to : rect.width },
			"height"	 : { to : rect.height }
		}, 750, Anim.Easing.easeOutStrong);

		anim.on('suspend', function(e) {
			Dom.hide(proxy);
		});

		anim.play();
		layout._anim = anim;
	});
}();

void function () {
	var elements = QW.Dom.query('tr');

	var proxy = Dom.query('.layout-proxy')[1];

	var layout = new QW.LayoutDragDrop({ siblings : elements });

	elements = QW.Dom.query('tr[class=""]');
	
	for (var i = 0 ; i < elements.length ; ++ i) {
		layout.add({ source : elements[i], proxy : proxy });
	}

	layout.on('dragstart', function(e) {
		if(layout._anim && layout._anim.isPlay()) {
			layout._anim.stop();
		}
		Dom.show(e.target.proxy, 'block');
	});

	layout.on('dragend', function(e) {
		var Anim = QW.Anim,
			proxy = e.target.proxy,
			source   = e.target.source,
			rect = Dom.getRect(source);

		var anim = new Anim(proxy, {
			"opacity": { from : 0.5, to : 0, end : 0.5},
			"top"	 : { to : rect.top },
			"left"	 : { to : rect.left },
			"width"	 : { to : rect.width },
			"height"	 : { to : rect.height }
		}, 1000, Anim.Easing.backIn);

		anim.on('suspend', function(e) {
			Dom.hide(proxy);
		});

		anim.play();
		layout._anim = anim;
	});


}();

void function () {
	var elements = QW.Dom.query('li');

	var proxy = Dom.query('.layout-proxy')[2];

	var layout = new QW.LayoutDragDrop({ siblings : elements, vertical : false, DragOptions : { constraintX : true, container : elements[0].parentNode } });
	
	for (var i = 0 ; i < elements.length ; ++ i) {
		layout.add({ source : elements[i], proxy : proxy });
	}

	layout.on('dragstart', function(e) {
		if(layout._anim && layout._anim.isPlay()) {
			layout._anim.stop();
		}
		Dom.show(e.target.proxy, 'block');
	});

	layout.on('dragend', function(e) {
		var Anim = QW.Anim,
			proxy = e.target.proxy,
			source   = e.target.source,
			rect = Dom.getRect(source);
		
		var anim = new Anim(proxy, {
			"opacity": { from : 0.5, to : 0, end : 0.5},
			"top"	 : { to : rect.top },
			"left"	 : { to : rect.left },
			"width"	 : { to : rect.width },
			"height"	 : { to : rect.height }
		}, 1000, Anim.Easing.easeOutStrong);

		anim.on('suspend', function(e) {
			Dom.hide(proxy);
		});

		anim.play();
		layout._anim = anim;
	});


}();
//]]></script>
</body>
</html>