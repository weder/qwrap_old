<html>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
	<title>QW Tree</title>
	<link href="../../../apps/assets/base.css" rel="stylesheet" type="text/css" media="screen"/>
	<link href="../assets/tree.css" rel="stylesheet" type="text/css" media="screen">
	<script type="text/javascript" src="../../../apps/core_dom_pure.js"></script>
	<script type="text/javascript" src="../tree.js"></script>
</head>
<body>
<div id=doc3>
	<div id=hd>
		Tree示例<br/>
	</div>
	<div id="bd" >
		<div class="section-ctn">
			<h3 class="section-hd">ComboBox示例：同步获取数据.</h3>
			<div id="treeCtn"></div>
			<input type=button value="refresh 01 节点" onclick="tree1.refreshFolder('01');"/>
			<input type=button value="open 02 节点" onclick="tree1.openFolder('02');"/>
			<input type=button value="focus 03 节点" onclick="tree1.focusItem('03');"/>
		</div>

		<div class="section-ctn">
			<h3 class="section-hd">ComboBox示例：异步获取数据</h3>
			<div id="treeCtn2"></div>
			<input type=button value="refresh 01 节点" onclick="tree2.refreshFolder('01');"/>
			<input type=button value="open 02 节点" onclick="tree2.openFolder('02');"/>
			<input type=button value="focus 03 节点" onclick="tree2.focusItem('03');"/>
		</div>

		<div class="section-ctn">
			<h3 class="section-hd">ComboBox示例：异步获取数据，并且在初始化时就需要打开部分节点</h3>
			<div id="treeCtn3"></div>
			<input type=button value="refresh 01 节点" onclick="tree3.refreshFolder('01');"/>
			<input type=button value="open 02 节点" onclick="tree3.openFolder('02');"/>
			<input type=button value="focus 03 节点" onclick="tree3.focusItem('03');"/>
		</div>

		<div class="section-ctn">
			<h3 class="section-hd">说明：</h3>
			<div>

			<pre>/**
* Tree(opts) : 构造函数，
* @param {Json} opts: 构造参数，目前支持以下：
	treeCtn:树容器，非空，无默认值
	rootItemData:  根节点数据，有默认值。每一个节点的数据为一个数组:[itemType,itemId,itemText,...]
			itemType: 字符串，如果以folder打头，表示它是一个folder节点，否则就当作一个叶节点数据，叶节没有“展开／收起”功能。
			itemId: 字符串，item的Id，在同一棵树里，至少所有枝节点的id具有唯一性。如果需要focusItem到叶节点，则叶节点的id也需要具有唯一性。
			itemText: 对于根节点，则把它当节点的html；对于其它节点，可以自由使用。
			...: 其它自由使用数据
	loadItemsData: function(id)，得到子节点数据。有默认实现（仅针对有某固定格式的dataSource的时候，参见例子）。<font color=red>在获取数据后需要调用setItemsData方法。</font>
	getItemHtml:function (itemData)，根据节点数据，得到节点的html，需要实现
	getNoDataHtml: function(id)，“枝节点没有子节点数据”时，展开枝节点后显示的内容
* @returns {Tree}: 返回一个Tree对象。
*/
</pre>

			</div>
		</div>

	</div>
	<div id="ft">
		QW 
	</div>

</div>
</body>
<script type="text/javascript" >
//生成tree的代码.---------------------

var dataSource={
"0": [
		["folder","01","folder01"],
		["folder","02","folder02"],
		["folder","03","folder03"],
		["file","04","file04"]
	],
"01": [
		["folder","0101","folder0101"],
		["file","0102","file0102"],
		["file","0103","file0103"]
	],
"02": [
		["file","0201","file0201"],
		["file","0202","file0202"]
	],
"0101": [
		["file","010101","file010101"],
		["file","010102","file010102"]
	]
};

var getItemHtml=function (itemData){
	switch(itemData[0].toLowerCase()){
		case "folder":
		return 'Folder<A href="#" target="aaaa" >仅作示例</A>';
		case "file":
		return 'File<A href="#" target="aaaa" >仅作示例</A>';
	}
	return "";
};

var tree1=new Tree({
	treeCtn:QW.NodeH.$("treeCtn"),
	rootItemData:["folderRoot","0","这是一个示例(同步获取数据)"],
	getItemHtml:getItemHtml,
	dataSource:dataSource});
tree1.openFolders(["0","01","0101","03"]);//对于数据同步获取的树，按顺序展开节点即可
tree1.focusItem("0101");


var tree2=new Tree({
	treeCtn:QW.NodeH.$("treeCtn2"),
	rootItemData:["folderRoot","0","这是一个示例(异步获取数据)"],
	dataSource:dataSource,
	getItemHtml:getItemHtml,
	loadItemsData:function(id){
		var me=this;
		setTimeout(function(){me.setItemsData(id,me.dataSource[id],true)},1000);
	}
});

var folderIdsToBeOpen=["01","0101","03"];//需要默认展开的folderIds
var tree3=new Tree({
	treeCtn:QW.NodeH.$("treeCtn3"),
	rootItemData:["folderRoot","0","这是一个示例(异步获取数据)"],
	dataSource:dataSource,
	getItemHtml:getItemHtml,
	loadItemsData:function(id){
		var me=this;
		setTimeout(function(){
			var itemsData=me.dataSource[id]||[]
			me.setItemsData(id,itemsData,true);
			for(var i=0;i<itemsData.length;i++){
				var tempId=itemsData[i][1];
				if(QW.ArrayH.contains(folderIdsToBeOpen,tempId)){
					me.openFolder(tempId);
					QW.ArrayH.remove(folderIdsToBeOpen,tempId);
				}
			}
		},1000);
	}
});



</script>
</body>

</html>
